# tmux設定ファイル
# 参考: https://github.com/tmux/tmux/wiki
# 参考: https://qiita.com/tags/tmux

# プレフィックスキーをC-b（デフォルト）からC-tに変更
# C-tはターミナルでの一般的な操作と競合しにくい
unbind C-b
set -g prefix C-t

# セミコロンとコロンのキーバインドを入れ替え
# セミコロンでペイン移動、コロンでコマンドプロンプトを開く
unbind :
unbind \;
bind : last-pane
bind \; command-prompt

# キーストロークのディレイを減らす（デフォルト500ms）
# ESCキー押下後の反応速度を向上させる
set -sg escape-time 10

# ウィンドウのインデックスを1から始める（デフォルトは0）
# 数字キーでの切り替えを直感的にする
set -g base-index 1

# ペインのインデックスを1から始める（デフォルトは0）
# ウィンドウインデックスと統一する
setw -g pane-base-index 1

# 設定ファイルのリロード機能
# prefix + R で設定を再読み込み
bind R source-file ~/.tmux.conf \; display "Reloaded!"
# prefix + C で設定ファイルを編集
bind C new-window -n config "exec vi ~/.tmux.conf"

# ペイン分割のキーバインド
# | で縦分割（左右に分割）
unbind '"'
bind | split-window -h

# _ で横分割（上下に分割）
unbind %
bind _ split-window -v

# Vimライクなペイン移動
# h,j,k,l でペイン間を移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Shift+矢印キーでペインサイズを調整
# -r オプションでリピート可能にする
bind -r S-Left resize-pane -L 5
bind -r S-Down resize-pane -D 5
bind -r S-Up resize-pane -U 5
bind -r S-Right resize-pane -R 5

# ペイン移動の追加機能
# Tab で次のペインに移動
bind -r Tab select-pane -t :.+
# t でペイン番号を表示
bind t display-panes

# ウィンドウ切り替え
# H で前のウィンドウ、L で次のウィンドウ
bind -r H select-window -t :-
bind -r L select-window -t :+

# マウス操作を有効にする
# ペインの選択、リサイズ、スクロールをマウスで操作可能
setw -g mouse on

# 256色端末を使用する
# True Colorサポートを有効にして色表現を向上
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",$TERM:Tc"

# ステータスバーの色設定
# 背景色：ダークグレー、文字色：ライトグレー
set -g status-bg "colour238"
set -g status-fg "colour255"

# コマンドラインの色設定
# メッセージ表示時の色を設定
set -g message-style fg="colour188"
set -g message-style bg="colour235"

# ペインボーダーの色設定
# 非アクティブペイン：グレー、アクティブペイン：ライトグレー
set -g pane-border-style fg="colour238"
set -g pane-active-border-style "bg=default fg=colour188"

# ステータスバーの表示設定
# デフォルトは非表示、必要に応じて切り替え
set -g status off
set -g status-left ""
set -g status-right ""
# S でステータスバー表示、s で非表示
bind S set -g status on
bind s set -g status off

# ステータスバーの更新間隔（デフォルト15秒→60秒）
# CPU負荷軽減のため更新頻度を下げる
set -g status-interval 60

# ウィンドウリストを中央に配置
set -g status-justify "centre"

# ステータスバーを画面下部に表示
set -g status-position "bottom"

# アクティビティ通知を有効にする
# ウィンドウでアクティビティが発生した際に視覚的に通知
setw -g monitor-activity on
set -g visual-activity on

# コピーモードでViキーバインドを使用
# h,j,k,l での移動、v での選択開始など
setw -g mode-keys vi

# コピーモードの詳細設定
# Enterキーのデフォルト動作を無効化
unbind -T copy-mode-vi Enter
# v でコピーモード開始
bind v copy-mode
# v で選択開始
bind -T copy-mode-vi v send-keys -X begin-selection
# Ctrl+q で矩形選択切り替え
bind -T copy-mode-vi C-q send-keys -X rectangle-toggle

# OS別クリップボード連携設定
# WSL（Windows Subsystem for Linux）環境
if-shell -b 'test "$(uname -a | grep microsoft)" != ""' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"; \
   bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "clip.exe"; \
   bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clip.exe";'

# macOS環境
if-shell -b 'test "$(uname -a | grep Darwin)" != ""' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"; \
   bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"; \
   bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy";'

# Linux環境（Wayland）
if-shell -b 'test "$(uname -a | grep Linux)" != ""' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"; \
   bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "wl-copy"; \
   bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "wl-copy";'
