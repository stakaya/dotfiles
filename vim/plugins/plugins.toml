# 起動時に読み込むプラグイン
[[plugins]]
repo = 'blueshirts/darcula'
hook_add = '''
  colorscheme darcula
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = { 'colorscheme': 'wombat' }
'''

[[plugins]]
repo = 'kana/vim-fakeclip'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
let $FZF_DEFAULT_COMMAND='rg --no-messages --files --hidden --follow --glob "!**/.git/*"'
let $FZF_DEFAULT_OPTS="--preview-window=border-none --no-scrollbar --height 40%"
let $FZF_CTRL_T_COMMAND='rg --no-messages --files --hidden --follow --glob "!.git/*"'
let $FZF_CTRL_T_OPTS='--preview-window=+8,border-none --preview "bat --color=always --style=header --line-range :100 {}"'

let g:fzf_layout = {
  \  'window': {
  \    'width': 0.8,
  \    'height': 0.6,
  \    'border': 'none'
  \  }
  \ }

  let g:fzf_colors =
    \ { 'fg':    ['fg', 'Normal'],
    \ 'bg':      ['bg', 'Normal'],
    \ 'hl':      ['fg', 'Comment'],
    \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
    \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
    \ 'hl+':     ['fg', 'Statement'],
    \ 'info':    ['fg', 'PreProc'],
    \ 'border':  ['fg', 'vertsplit'],
    \ 'prompt':  ['fg', 'Conditional'],
    \ 'pointer': ['fg', 'Exception'],
    \ 'marker':  ['fg', 'Keyword'],
    \ 'spinner': ['fg', 'Label'],
    \ 'header':  ['fg', 'Comment'] }

  nnoremap <silent> <space>; :Commands<CR>
  nnoremap <silent> <space>w :Buffers<CR>
  nnoremap <silent> <space><space> :call FzfOmniFiles()<CR>

  if executable('rg')
    nnoremap <silent> <space>g "zyiw:let @/ =  @z<CR>:set hlsearch<CR>:Rg<Space><C-r>/<CR>
    vnoremap <silent> <space>g "zy:let @/ = @z<CR>:set hlsearch<CR>:Rg<Space><C-r>/<CR>
  endif

  function! FzfOmniFiles()
	  let is_git = system('git status')
	  if v:shell_error
		  :Files
	  else
		  :GitFiles
	  endif
  endfunction
'''

[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
  if executable('rg')
  	let g:unite_source_grep_command = 'rg'
  	let g:unite_source_grep_default_opts = '-n --no-heading --color never'
  	let g:unite_source_grep_recursive_opt = ''
  endif
'''

[[plugins]]
repo = 'Shougo/vimfiler'
depends = 'Shougo/unite.vim'
hook_add = '''
  let g:vimfiler_as_default_explorer=1
  let g:vimfiler_safe_mode_by_default=0
  let g:netrw_liststyle=3
  nnoremap <silent> <space>e :VimFilerExplorer<CR>
'''

[[plugins]]
repo = 'andymass/vim-matchup'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  nnoremap <silent> <D-/> :TComment<CR>
  nnoremap <silent> <C-_> :TComment<CR>
  vnoremap <silent> <D-/> :TComment<CR>
  vnoremap <silent> <C-_> :TComment<CR>
'''

[[plugins]]
repo = 'tpope/vim-abolish'
hook_add = '''
  nnoremap <silent>* "zyiw:let @/ = @z<CR>:S/<C-r>/<CR>
  vnoremap <silent>* "zy:let @/ = @z<CR>:S/<C-r>/<CR>
'''

[[plugins]]
repo = 'tpope/vim-surround'
