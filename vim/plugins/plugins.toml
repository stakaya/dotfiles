# 起動時に読み込むプラグイン
[[plugins]]
repo = 'blueshirts/darcula'
hook_add = '''
  colorscheme darcula
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = { 'colorscheme': 'wombat' }
'''

[[plugins]]
repo = 'kana/vim-fakeclip'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''

  let g:fzf_layout = {
  \  'window': {
  \    'width': 0.8,
  \    'height': 0.6,
  \    'border': 'none'
  \  }
  \ }

  nnoremap <silent> <space>; :Commands<CR>
  nnoremap <silent> <space>w :Buffers<CR>
  nnoremap <silent> <space><space> :call FzfOmniFiles()<CR>

  if executable('rg')
    nnoremap <silent> <space>g "zyiw:let @/ =  @z<CR>:set hlsearch<CR>:Rg<Space><C-r>/<CR>
    vnoremap <silent> <space>g "zy:let @/ = @z<CR>:set hlsearch<CR>:Rg<Space><C-r>/<CR>
  endif

  function! FzfOmniFiles()
	  " Cache git status check for current directory
	  let l:git_dir = expand('%:p:h')
	  let l:cache_key = 'fzf_git_' . substitute(l:git_dir, '[^a-zA-Z0-9]', '_', 'g')
	  
	  if !exists('g:' . l:cache_key) || (localtime() - get(g:, l:cache_key . '_time', 0)) > 30
		  let l:is_git = system('git -C ' . shellescape(l:git_dir) . ' rev-parse --git-dir 2>/dev/null')
		  let g:[l:cache_key] = !v:shell_error
		  let g:[l:cache_key . '_time'] = localtime()
	  endif
	  
	  if g:[l:cache_key]
		  :GitFiles
	  else
		  :Files
	  endif
  endfunction
'''

