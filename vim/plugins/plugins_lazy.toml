# ÈÅÖÂª∂Ë™≠„ÅøËæº„Åø„Éó„É©„Ç∞„Ç§„É≥

[[plugins]]
repo = 'itchyny/calendar.vim'
on_cmd = 'Calendar'
hook_source = '''
  let g:calendar_google_calendar=1
  let g:calendar_google_task=1
  source ~/.cache/calendar.vim/credentials.vim
'''

[[plugins]]
repo = 'tyru/eskk.vim'
on_event = 'VimEnter'
hook_add = '''
  if has('vim_starting')
    if has('win32') || has('win64')
       let s:dict = expand($HOME.'\vimfiles\dict')
    else
       let s:dict = expand('~/.vim/dict')
    endif

    let g:eskk#marker_henkan = "üí¨"
    let g:eskk#marker_henkan_select = "‚úÖ"
    let g:eskk#marker_jisyo_touroku = "üìñ"
    let g:eskk#egg_like_newline = 1
    let g:eskk#dictionary = { 'path': s:dict.'/SKK-JISYO.user', 'sorted': 0, 'encoding': 'utf-8' }
    let g:eskk#large_dictionary = { 'path': s:dict.'/SKK-JISYO.L', 'sorted': 1,	'encoding': 'euc-jp' }

    augroup eskk
      autocmd!
      autocmd User eskk-enable-post lmap <buffer> l <Plug>(eskk:disable)
    augroup END

    imap <space>j <Plug>(eskk:toggle)
    cmap <space>j <Plug>(eskk:toggle)
    nmap <space>j i<Plug>(eskk:toggle)
  endif
'''

[[plugins]]
repo = 'koron/dicwin-vim'
on_event = 'VimEnter'
hook_source = '''
  let g:dicwin_mapleader = "\<C-k>"
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'tyru/urilib.vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'tyru/open-browser.vim'
on_event = 'VimEnter'
hook_source = '''
  nnoremap <silent> <space>b "zyiw:let @/ =  @z<CR>:set hlsearch<CR>:OpenBrowserSmartSearch<Space><C-r>/<CR>
  vnoremap <silent> <space>b "zy:let @/ = @z<CR>:set hlsearch<CR>:OpenBrowserSmartSearch<Space><C-r>/<CR>
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'
on_event = 'VimEnter'
hook_source = '''
  nnoremap <silent> <space>R :Qfreplace<CR>
'''

[[plugins]]
repo = 'kannokanno/previm'
on_cmd = 'PrevimOpen'
on_ft = ['md','markdown']

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['md','markdown']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
on_ft = ['typescript']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['conf', 'toml']

[[plugins]]
repo = 'mattn/webapi-vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'mattn/gist-vim'
depends = 'mattn/webapi-vim'
on_cmd = 'Gist'

[[plugins]]
repo = 'shinchu/hz_ja.vim'
on_event = 'VimEnter'

# LSPÈñ¢ÈÄ£
[[plugins]]
repo = 'mattn/vim-lsp-settings'
on_event = 'VimEnter'
hook_source = '''
  if empty(globpath(&rtp, 'autoload/lsp.vim'))
    finish
  endif

  function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    setlocal signcolumn=yes
    nmap <buffer> gd <plug>(lsp-definition)
  endfunction

  augroup lsp_install
    au!
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
  augroup END
  command! LspDebug let lsp_log_verbose=1 | let lsp_log_file = expand('~/lsp.log')
'''

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
on_event = 'VimEnter'
hook_source = '''
  let g:lsp_diagnostics_enabled = 1
  let g:lsp_diagnostics_echo_cursor = 1
'''

[[plugins]]
repo = 'mattn/vim-lsp-icons'
on_event = 'VimEnter'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
on_i = 1
hook_source = '''
  let g:asyncomplete_auto_popup = 1
  let g:asyncomplete_auto_completeopt = 0
  let g:asyncomplete_popup_delay = 200
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
on_event = 'VimEnter'
