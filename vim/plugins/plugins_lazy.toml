# 遅延読み込みプラグイン

[[plugins]]
repo = 'itchyny/calendar.vim'
on_cmd = 'Calendar'
hook_source = '''
  let g:calendar_google_calendar=1
  let g:calendar_google_task=1
'''

[[plugins]]
repo = 'tyru/urilib.vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'tyru/open-browser.vim'
on_event = 'VimEnter'
hook_source = '''
  nnoremap <silent> <space>b "zyiw:let @/ =  @z<CR>:set hlsearch<CR>:OpenBrowserSmartSearch<Space><C-r>/<CR>
  vnoremap <silent> <space>b "zy:let @/ = @z<CR>:set hlsearch<CR>:OpenBrowserSmartSearch<Space><C-r>/<CR>
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'
on_event = 'QuickFixCmdPre'
hook_source = '''
  nnoremap <silent> <space>q :Qfreplace<CR> 
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
on_ft = ['typescript','javascript','ruby','php','c','cpp','java','kotlin']
hook_source = '''
  let g:indent_guides_auto_colors=0
  let g:indent_guides_enable_on_vim_startup=1
  let g:indent_guides_start_level=2
  let g:indent_guides_guide_size=1
  autocmd VimEnter,Colorscheme *.php,*.c,*.cpp,*.java,*.kt,*.js,*.ts :hi IndentGuidesOdd  guibg=#2e2e2e ctermbg=236
  autocmd VimEnter,Colorscheme *.php,*.c,*.cpp,*.java,*.kt,*.js,*.ts :hi IndentGuidesEven guibg=#2f2f2f ctermbg=236
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_ft = ['php']
hook_source = '''
  autocmd FileType php compiler php
  autocmd FileType php setlocal makeprg=php\ -l\ %
  autocmd FileType php setlocal errorformat=%m\ in\ %f\ on\ line\ %l
'''

[[plugins]]
repo = 'kannokanno/previm'
on_cmd = 'PrevimOpen'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']

[[plugins]]
repo = 'koron/dicwin-vim'
on_event = 'VimEnter'
hook_source = '''
let g:dicwin_mapleader = "\<C-k>"
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
on_ft = ['typescript']

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['css', 'html']

[[plugins]]
repo = 'mattn/webapi-vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'mattn/gist-vim'
depends = 'mattn/webapi-vim'
on_cmd = 'Gist'

[[plugins]]
repo = 'shinchu/hz_ja.vim'
on_event = 'VimEnter'

# LSP関連
[[plugins]]
repo = 'mattn/vim-lsp-settings'
on_event = 'VimEnter'
hook_source = '''
if empty(globpath(&rtp, 'autoload/lsp.vim'))
  finish
endif

function! s:on_lsp_buffer_enabled() abort
  setlocal omnifunc=lsp#complete
  setlocal signcolumn=yes
  nmap <buffer> gd <plug>(lsp-definition)
  nmap <buffer> <f2> <plug>(lsp-rename)
  inoremap <expr> <cr> pumvisible() ? "\<c-y>\<cr>" : "\<cr>"
endfunction

augroup lsp_install
  au!
  autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
command! LspDebug let lsp_log_verbose=1 | let lsp_log_file = expand('~/lsp.log')

let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1
let g:asyncomplete_auto_popup = 1
let g:asyncomplete_auto_completeopt = 0
let g:asyncomplete_popup_delay = 200
let g:lsp_text_edit_enabled = 1
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
on_event = 'VimEnter'

[[plugins]]
repo = 'mattn/vim-lsp-icons'
on_event = 'VimEnter'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_event = 'VimEnter'

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
on_event = 'VimEnter'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
on_event = 'VimEnter'
